/*
 * Copyright 2020-2022 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'application'
}

ext {
	set('springCloudVersion', "2020.0.5")
    set('imagePrefix', 'wstemplate')
}

sourceCompatibility = '11'

apply from: '../gradle/common.gradle'
apply from: '../gradle/docker.gradle'


repositories {
	mavenCentral()
}


application {
    mainClassName = 'hu.perit.template.gateway.Application'
    // Some JVM options already set in common.gradle
    applicationDefaultJvmArgs += ['-Xmx512m', '-Xms32m']
}


dependencies {
	compile project(':spvitamin-spring-cloud-client')

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Gateway
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'

	// Eureka client
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// Hystrix
	//implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}


dockerImage() {
    dependsOn 'dockerBackendImage'
}

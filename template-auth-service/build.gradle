/*
 * Copyright 2020-2022 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${dependencyManagementVersion}"
    id 'application'
    id 'jacoco'
    id "com.github.ManifestClasspath" version "0.1.0-RELEASE"
}
apply from: '../gradle/common.gradle'
apply from: '../gradle/docker.gradle'


repositories {
    mavenCentral()
    mavenLocal()
}


application {
    mainClassName = 'hu.perit.template.authservice.Application'
    // Some JVM options already set in common.gradle
    applicationDefaultJvmArgs += ['-Xmx512m', '-Xms32m']
}


dependencies {
    implementation project(':spvitamin-core')
    implementation project(':spvitamin-spring-admin')
    implementation project(':spvitamin-spring-cloud-client')
    implementation project(':spvitamin-spring-cloud-feign')
    implementation project(':spvitamin-spring-general')
    implementation project(':spvitamin-spring-logging')
    implementation project(':spvitamin-spring-security')
    implementation project(':spvitamin-spring-security-ldap')
    implementation project(':spvitamin-spring-server')
    implementation project(':spvitamin-spring-data')
    implementation project(':template-auth-api')

//    implementation 'hu.perit.spvitamin:spvitamin-core'
//    implementation 'hu.perit.spvitamin:spvitamin-spring-admin'
//    implementation 'hu.perit.spvitamin:spvitamin-spring-cloud-client'
//    implementation 'hu.perit.spvitamin:spvitamin-spring-cloud-feign'
//    implementation 'hu.perit.spvitamin:spvitamin-spring-general'
//    implementation 'hu.perit.spvitamin:spvitamin-spring-logging'
//    implementation 'hu.perit.spvitamin:spvitamin-spring-security'
//    implementation 'hu.perit.spvitamin:spvitamin-spring-security-ldap'
//    implementation 'hu.perit.spvitamin:spvitamin-spring-server'
//    implementation 'hu.perit.spvitamin:spvitamin-spring-data'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    integtestCompileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    integtestAnnotationProcessor 'org.projectlombok:lombok'

    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-ldap'
    implementation 'org.springframework.security:spring-security-config'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // JJWT
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // JAXB (JDK > 8 miatt)
    implementation 'javax.xml.bind:jaxb-api:2.3.0'
    implementation 'org.glassfish.jaxb:jaxb-runtime'

    // Validation
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.hibernate:hibernate-validator:6.1.5.Final'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.3'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.0.3'

    // apache.commons
    implementation 'org.apache.commons:commons-lang3:3.10'
    implementation 'org.apache.commons:commons-collections4:4.3'

    // ModelMapper TODO: mapstruct
    implementation 'org.modelmapper.extensions:modelmapper-spring:2.3.5'

    // OpenFeign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // OpenCSV
    implementation 'com.opencsv:opencsv:4.0'


    //------------------------------------------------------------------------------------------------------------------
    // Runtime dependencies
    //------------------------------------------------------------------------------------------------------------------
    // H2
    runtimeOnly 'com.h2database:h2'
    // PostgreSQL
    runtimeOnly 'org.postgresql:postgresql'

    // Logging in json format
    runtimeOnly 'net.logstash.logback:logstash-logback-encoder:7.2'

    // Micrometer Prometheus plugin
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'


    //------------------------------------------------------------------------------------------------------------------
    // Test dependencies
    //------------------------------------------------------------------------------------------------------------------
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    integtestRuntimeOnly 'com.h2database:h2'
    integtestRuntimeOnly 'org.postgresql:postgresql'
}


dependencyManagement {
    imports {
        //mavenBom "hu.perit.spvitamin:spvitamin-dependencies:${spvitaminVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


test {
    useJUnitPlatform()
}


dockerImage() {
    dependsOn 'dockerBackendImage'
}

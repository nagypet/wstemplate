#docker compose for local development

version: '3.6'

networks:
    back-tier-net:
        driver: bridge
    db-net:
        driver: bridge
    monitoring:
        driver: bridge


services: 
    
    #####################################################################################                 
    ldap:
    #####################################################################################                 
        container_name: wstemplate-dev-ldap
        image: petyaba/ldap
        restart: unless-stopped
        ports:
            - "10389:10389"
        networks:
            - back-tier-net

            
    #####################################################################################                 
    postgres:
    #####################################################################################                 
        container_name: wstemplate-dev-postgres
        image: postgres:10.13-alpine
        environment:
            - POSTGRES_PASSWORD=sa
        ports:
            - "5432:5432"
        volumes:
            - postgres:/var/lib/postgresql/data
        networks: 
            - back-tier-net
            - db-net


    #####################################################################################                 
    pgadmin:
    #####################################################################################                 
        container_name: wstemplate-dev-pgadmin
        #image: dpage/pgadmin4
        image: thajeztah/pgadmin4
        #environment:
        #    - PGADMIN_DEFAULT_EMAIL=postgres
        #    - PGADMIN_DEFAULT_PASSWORD=sa
        ports:
            - "5400:5050"
        volumes:
            - pgadmin:/var/lib/pgadmin:rw
        networks: 
            - db-net
        #logging:
        #    driver: none  


    #####################################################################################                 
    gateway:
    #####################################################################################                 
        container_name: wstemplate-dev-gateway
        image: wstemplate-template-gateway
        environment:
            - JAVA_OPTS=-DEUREKA_SERVER=http://discovery:8400/eureka
        ports:
            - '8500:8500'
        networks: 
            - back-tier-net
            - monitoring
        hostname: 'gateway'
        
  
    #####################################################################################                 
    discovery:
    #####################################################################################                 
        container_name: wstemplate-dev-discovery
        image: wstemplate-template-eureka
        environment:
            #agentlib for remote debugging
            - JAVA_OPTS=-DEUREKA_SERVER=http://discovery:8400/eureka -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
            #- TEMPLATE_EUREKA_OPTS=-Dspring.profiles.active=docker
            - EUREKA_ENVIRONMENT_PROFILE=dev
        ports:
            - '8400:8400'
            - '5501:5005'
        networks: 
            - back-tier-net
            - monitoring
        depends_on:
            - ldap 
            - postgres
        hostname: 'discovery'
  
  
    #####################################################################################                 
    auth-service:
    #####################################################################################                 
        container_name: wstemplate-dev-auth-service
        image: wstemplate-template-auth-service
        environment:
              - JAVA_OPTS=-DEUREKA_SERVER=http://discovery:8400/eureka
              - TEMPLATE_AUTH_SERVICE_OPTS=-Dspring.profiles.active=pgdb
        ports:
            - "8410:8410"
        networks: 
            - back-tier-net
            - monitoring
        depends_on:
            - discovery  
            - postgres
        hostname: 'auth-service'


    #####################################################################################                 
    scalable-service-1:
    #####################################################################################                 
        container_name: wstemplate-dev-scalable-service-1
        image: wstemplate-template-scalable-service
        environment:
            - JAVA_OPTS=-DEUREKA_SERVER=http://discovery:8400/eureka -DHOSTNAME=scalable-service-1 -DPORT=8420
            #- TEMPLATE_SCALABLE_SERVICE_OPTS=-Dspring.profiles.active=docker
        ports:
            - "8420:8420"
        networks: 
            - back-tier-net
            - monitoring
        depends_on:
            - discovery  
            - auth-service
        hostname: 'scalable-service-1'


    #####################################################################################                 
    scalable-service-2:
    #####################################################################################                 
        container_name: wstemplate-dev-scalable-service-2
        image: wstemplate-template-scalable-service
        environment:
            - JAVA_OPTS=-DEUREKA_SERVER=http://discovery:8400/eureka -DHOSTNAME=scalable-service-2 -DPORT=8430
            #- TEMPLATE_SCALABLE_SERVICE_OPTS=-Dspring.profiles.active=docker
        ports:
            - "8430:8430"
        networks: 
            - back-tier-net
            - monitoring
        depends_on:
            - discovery  
            - auth-service
        hostname: 'scalable-service-2'


    #####################################################################################                 
    scalable-service-3:
    #####################################################################################                 
        container_name: wstemplate-dev-scalable-service-3
        image: wstemplate-template-scalable-service
        environment:
            - JAVA_OPTS=-DEUREKA_SERVER=http://discovery:8400/eureka -DHOSTNAME=scalable-service-3 -DPORT=8440
            #- TEMPLATE_SCALABLE_SERVICE_OPTS=-Dspring.profiles.active=docker
        ports:
            - "8440:8440"
        networks: 
            - back-tier-net
            - monitoring
        depends_on:
            - discovery  
            - auth-service
        hostname: 'scalable-service-3'


    #####################################################################################                 
    prometheus:
    #####################################################################################                 
        container_name: wstemplate-dev_prometheus
        image: prometheus
        volumes:
            - prometheus:/prometheus
        command: 
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention.time=200h'
            - '--web.enable-lifecycle'
        ports:
            - '9090:9090'
        networks: 
            - monitoring
        labels:
            hu.perit.template.cluster: "monitoring"


    #####################################################################################                 
    nodeexporter:
    #####################################################################################                 
        image: prom/node-exporter:v0.18.1
        container_name: wstemplate-dev_nodeexporter
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command:
            - '--path.procfs=/host/proc'
            - '--path.rootfs=/rootfs'
            - '--path.sysfs=/host/sys'
            - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
        restart: unless-stopped
        ports:
            - '9100:9100'
        networks: 
            - monitoring
        labels:
            hu.perit.template.cluster: "monitoring"


    #####################################################################################                 
    cadvisor:
    #####################################################################################                 
        image: gcr.io/google-containers/cadvisor:v0.36.0
        container_name: wstemplate-dev_cadvisor
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker:/var/lib/docker:ro
            - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
        restart: unless-stopped
        ports:
            - '8080:8080'
        networks: 
            - monitoring
        labels:
            hu.perit.template.cluster: "monitoring"


    #####################################################################################                 
    grafana:
    #####################################################################################                 
        container_name: wstemplate-dev_grafana
        image: grafana
        volumes:
            - grafana:/var/lib/grafana
        ports:
            - '3000:3000'
        networks: 
            - monitoring
        depends_on:
            - prometheus
        labels:
            hu.perit.template.cluster: "monitoring"

  
volumes:
    postgres:
    pgadmin:
    prometheus:
    grafana:
